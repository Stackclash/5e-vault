{
  "code": "function initScript(app) {\n  try {\n    const path = require('path')\n    const fs = require('fs')\n    const config = [\n        {\n          description: 'ttrpg-convert-cli Styles',\n          destination: '.obsidian/snippets/ttrpg-convert-cli.css',\n          urls: 'https://rawcdn.githack.com/ebullient/ttrpg-convert-cli/refs/heads/main/examples/css-snippets/dnd5e-compendium.css'\n        },\n        {\n          description: 'ITS Theme CSS Styles',\n          destination: '.obsidian/snippets/ITS-Theme.css',\n          urls: [\n            'https://rawcdn.githack.com/SlRvb/Obsidian--ITS-Theme/refs/heads/main/Snippets/S%20-%20Encoded%20Fonts.css',\n            'https://rawcdn.githack.com/SlRvb/Obsidian--ITS-Theme/refs/heads/main/Snippets/S%20-%20Encoded%20Icons.css'\n          ]\n        },\n        {\n          description: 'Metabind Tabs',\n          destination: '.obsidian/snippets/metabind-tabs.css',\n          urls: 'https://rawcdn.githack.com/sailKiteV/Obsidian-Snippets-and-Demos/refs/heads/main/TabsInObsidian/TabsInObsidian.css'\n        }\n      ]\n    \n    let promises = []\n    \n    config.forEach(item => {\n      if (Array.isArray(item.urls)) {\n        promises.push(Promise.all(item.urls.map(url => request(url))))\n      } else {\n        promises.push(request(item.urls))\n      }\n    })\n    \n    Promise.all(promises)\n    .then(responses => {\n      return responses.forEach((data, index) => {\n        if (Array.isArray(data)) {\n          fs.writeFileSync(path.join(app.vault.adapter.getBasePath(), config[index].destination), data.join('\\n\\n'))\n        } else {\n          fs.writeFileSync(path.join(app.vault.adapter.getBasePath(), config[index].destination), data)\n        }\n      })\n    })\n    .then(() => {\n      new Notice('External files downloaded successfully')\n    })\n    .catch((error) => {\n      throw new Error(error.message)\n    })\n  } catch (e) {\n    new Notice(`Error running downloadExternalFiles.js: ${e.message}`)\n  }\n}\n\ninitScript(app)"
}